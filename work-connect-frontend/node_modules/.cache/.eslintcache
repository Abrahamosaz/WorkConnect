[{"/home/abraham/Desktop/WorkConnect/work-connect-frontend/src/index.js":"1","/home/abraham/Desktop/WorkConnect/work-connect-frontend/src/App.js":"2","/home/abraham/Desktop/WorkConnect/work-connect-frontend/src/pages/user_login.jsx":"3","/home/abraham/Desktop/WorkConnect/work-connect-frontend/src/pages/signup_success.jsx":"4","/home/abraham/Desktop/WorkConnect/work-connect-frontend/src/pages/user_signup.jsx":"5","/home/abraham/Desktop/WorkConnect/work-connect-frontend/src/pages/sign_up_employer.jsx":"6","/home/abraham/Desktop/WorkConnect/work-connect-frontend/src/pages/user_type.jsx":"7","/home/abraham/Desktop/WorkConnect/work-connect-frontend/src/pages/home.jsx":"8","/home/abraham/Desktop/WorkConnect/work-connect-frontend/src/pages/nomatch.jsx":"9","/home/abraham/Desktop/WorkConnect/work-connect-frontend/src/pages/sign_up_employee.jsx":"10","/home/abraham/Desktop/WorkConnect/work-connect-frontend/src/pages/employee_signup_details.jsx":"11","/home/abraham/Desktop/WorkConnect/work-connect-frontend/src/pages/navbar.jsx":"12","/home/abraham/Desktop/WorkConnect/work-connect-frontend/src/pages/employer_signup_details.jsx":"13","/home/abraham/Desktop/WorkConnect/work-connect-frontend/src/utils/employer_handler.js":"14","/home/abraham/Desktop/WorkConnect/work-connect-frontend/src/utils/employee_handler.js":"15"},{"size":394,"mtime":1687862875073,"results":"16","hashOfConfig":"17"},{"size":1442,"mtime":1687955430769,"results":"18","hashOfConfig":"17"},{"size":1187,"mtime":1687955430781,"results":"19","hashOfConfig":"17"},{"size":745,"mtime":1687955430781,"results":"20","hashOfConfig":"17"},{"size":4399,"mtime":1687958425371,"results":"21","hashOfConfig":"17"},{"size":3714,"mtime":1687955430781,"results":"22","hashOfConfig":"17"},{"size":598,"mtime":1687967628520,"results":"23","hashOfConfig":"17"},{"size":481,"mtime":1687956356146,"results":"24","hashOfConfig":"17"},{"size":372,"mtime":1687820305178,"results":"25","hashOfConfig":"17"},{"size":2687,"mtime":1687968916987,"results":"26","hashOfConfig":"17"},{"size":3927,"mtime":1687955430769,"results":"27","hashOfConfig":"17"},{"size":607,"mtime":1687956435116,"results":"28","hashOfConfig":"17"},{"size":3703,"mtime":1687955430769,"results":"29","hashOfConfig":"17"},{"size":616,"mtime":1687961565590,"results":"30","hashOfConfig":"17"},{"size":1036,"mtime":1687966712261,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},"3q5md2",{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"35"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"35"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"35"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"35"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"35"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/abraham/Desktop/WorkConnect/work-connect-frontend/src/index.js",[],[],[],"/home/abraham/Desktop/WorkConnect/work-connect-frontend/src/App.js",[],[],"/home/abraham/Desktop/WorkConnect/work-connect-frontend/src/pages/user_login.jsx",[],[],"/home/abraham/Desktop/WorkConnect/work-connect-frontend/src/pages/signup_success.jsx",["83"],[],"import React, { useEffect } from \"react\";\nimport { Link, useNavigate } from 'react-router-dom';\n\nfunction SignupSuccess () {\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        const redirect = () => {\n            navigate('/')\n        };\n        const timer = setTimeout(redirect, 5000);\n        return () => clearTimeout(timer);\n      }, []);\n\n    return (\n        <div className=\"App App-header\">\n            <h1>Welcome</h1>\n            <h4>You have successfully created your WorkConnect account</h4>\n            <p>Don't worry; this page redirects authomatically.</p>\n            <br />\n            <p>If it doesn't, please click <Link to='/'>here</Link>\n            </p>\n        </div>\n    )\n}\n\nexport default SignupSuccess;","/home/abraham/Desktop/WorkConnect/work-connect-frontend/src/pages/user_signup.jsx",["84","85","86"],[],"/home/abraham/Desktop/WorkConnect/work-connect-frontend/src/pages/sign_up_employer.jsx",["87","88","89"],[],"import React from 'react'\nimport { useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\n\nfunction SignUpEmployer() {\n    const navigate = useNavigate();\n\n    const [username, setUsername] = useState('');\n    const [firstname, setFirstname] = useState('');\n    const [lastname, setLastname] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [confirmpassword, setConfirmpassword] = useState('');\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n\n        const url = 'http://localhost:8000/api/users/';\n        const response = fetch(url, {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\n                username: username,\n                email: email,\n                password: password,\n                first_name: firstname,\n                last_name: lastname,\n                confirm_password: confirmpassword\n            })\n        });\n        const data = await response;\n        const json_data = await data.json()\n        if (data.status !== 201) {\n        } else {\n        \n        }\n        \n        navigate('employer_signup_details');\n    }\n\n  return (\n    <div className=\"Sign-up-employee\">\n            <h1>Create an Account</h1>\n            <h3>Set up your WorkConnect Employer Account in seconds</h3>\n            <small>We only need a few details</small>\n            <br />\n            <form onSubmit={handleSubmit}>\n                <label htmlFor=\"username\">UserName:\n                    <input\n                    type=\"text\"\n                    name=\"UserName\"\n                    placeholder='Username'\n                    id=\"username\"\n                    value={username}\n                    onChange={(e) => setUsername(e.target.value)} />\n                </label>\n                <br />\n                <label htmlFor=\"firstname\">FirstName: \n                    <input\n                    type=\"text\"\n                    placeholder='First name'\n                    name=\"FirstName\"\n                    id=\"firstname\"\n                    value={firstname}\n                    onChange={(e) => setFirstname(e.target.value)} />\n                </label>\n                <br />\n                <label htmlFor=\"lastname\">LastName: \n                    <input\n                    type=\"text\"\n                    name=\"LastName\"\n                    placeholder='Last name'\n                    id=\"lastname\"\n                    value={lastname}\n                    onChange={(e) => setLastname(e.target.value)} />\n                </label>\n                <br />\n                <label htmlFor=\"email\">Email: \n                    <input\n                    type=\"email\"\n                    name=\"Email\"\n                    placeholder='Email'\n                    id=\"email\"\n                    value={email}\n                    onChange={(e) => setEmail(e.target.value)} />\n                </label>\n                <br />\n                <label htmlFor=\"pass\">PassWord: \n                <input type=\"password\" name=\"Password\" id=\"pass\" placeholder='Password' value={password}/>\n                </label>\n                <br />\n                <label htmlFor=\"pass_confirm\">Confirm PassWord: \n                    <input type=\"password\" name=\"confirmPassword\" placeholder='Confirm Password' id=\"pass_confirm\" value={confirmpassword} />\n                </label>\n                <br />\n\n                <input type=\"submit\" value=\"Sign Up\" />\n            </form>\n            <br />\n\n            <p>Already signed up?</p>\n            <Link to='/login'>Login</Link>\n        </div>)\n}\n\nexport default SignUpEmployer;","/home/abraham/Desktop/WorkConnect/work-connect-frontend/src/pages/user_type.jsx",[],[],"/home/abraham/Desktop/WorkConnect/work-connect-frontend/src/pages/home.jsx",[],[],"/home/abraham/Desktop/WorkConnect/work-connect-frontend/src/pages/nomatch.jsx",[],[],"/home/abraham/Desktop/WorkConnect/work-connect-frontend/src/pages/sign_up_employee.jsx",["90","91","92"],[],"/home/abraham/Desktop/WorkConnect/work-connect-frontend/src/pages/employee_signup_details.jsx",["93"],[],"import React, { useState } from 'react'\nimport { Link, useNavigate } from 'react-router-dom';\n\nfunction EmployeeSignUpDetails() {\n    const navigate = useNavigate();\n\n    const [date_of_birth, setDOB] = useState('');\n    const [phone_number, setPhoneNumber] = useState('');\n    const [skills, setSkills] = useState('');\n    const [location, setLocation] = useState('');\n    const [state, setState] = useState('');\n    const [country, setCountry] = useState('');\n    const [profile_pic, setProfilePic] = useState('');\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        navigate(\"/sign_up_success\", { replace: true });\n    }\n\n  return (\n    <div className=\"\">\n            <h1>WorkConnect Account Setup</h1>\n            <h3>We need a few more details to create a great personalised experience for you</h3>\n            <br />\n            <br />\n            <form onSubmit={handleSubmit}>\n                <label htmlFor=\"dob\">Date of Birth:\n                    <input\n                    type=\"date\"\n                    name=\"date_of_birth\"\n                    placeholder='Date of Birth'\n                    id=\"dob\"\n                    value={date_of_birth}\n                    onChange={(e) => setDOB(e.target.value)} />\n                </label>\n                <br />\n                <label htmlFor=\"phone\">Phone number: \n                    <input\n                    type=\"tel\"\n                    name=\"phone_number\"\n                    placeholder='Phone number'\n                    id=\"phone\"\n                    value={phone_number}\n                    onChange={(e) => setPhoneNumber(e.target.value)} />\n                </label>\n                <br />\n                <label htmlFor=\"skills\">Skills: \n                    <p>List out your skills and seperate them with ',' like this:\n                    <br />react, html, css, python.\n                    <br />This will help us match you with jobs that fit the kind of skills you posses</p>\n                    <input\n                    type=\"text\"\n                    name=\"skills\"\n                    placeholder='JavaScript, React, Django.'\n                    id=\"skills\"\n                    value={skills}\n                    onChange={(e) => setSkills(e.target.value)} />\n                </label>\n                <br />\n                <label htmlFor=\"location\">Location: \n                    <input\n                    type=\"text\"\n                    name=\"location\"\n                    placeholder='Location'\n                    id=\"location\"\n                    value={location}\n                    onChange={(e) => setLocation(e.target.value)} />\n                </label>\n                <br />\n                <label htmlFor=\"state\">State: \n                    <input\n                    type=\"text\"\n                    name=\"state\"\n                    placeholder='State'\n                    id=\"state\"\n                    value={state}\n                    onChange={(e) => setState(e.target.value)} />\n                </label>\n                <br />\n                <label htmlFor=\"country\">Country: \n                    <input\n                    type=\"text\"\n                    name=\"country\"\n                    placeholder='Country'\n                    id=\"country\"\n                    value={country}\n                    onChange={(e) => setCountry(e.target.value)} />\n                </label>\n                <br />\n                <label htmlFor=\"profile_pic\">Profile Picture: \n                    <input\n                    type=\"file\"\n                    name=\"profile_pic\"\n                    id=\"profile_pic\"\n                    value={profile_pic}\n                    onChange={(e) => setProfilePic(e.target.value)} />\n                </label>\n                <br />\n\n                <input type=\"submit\" value=\"Save\" />\n            </form>\n            <br />\n        </div>)\n  }\n\nexport default EmployeeSignUpDetails;","/home/abraham/Desktop/WorkConnect/work-connect-frontend/src/pages/navbar.jsx",[],[],"/home/abraham/Desktop/WorkConnect/work-connect-frontend/src/pages/employer_signup_details.jsx",["94"],[],"import React, { useState } from 'react'\nimport { Link, useNavigate } from 'react-router-dom';\n\nfunction EmployerSignUpDetails() {\n    const navigate = useNavigate();\n\n    const [date_of_birth, setDOB] = useState('');\n    const [phone_number, setPhoneNumber] = useState('');\n    const [company, setCompany] = useState('');\n    const [location, setLocation] = useState('');\n    const [state, setState] = useState('');\n    const [country, setCountry] = useState('');\n    const [profile_pic, setProfilePic] = useState('');\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        navigate(\"/sign_up_success\", { replace: true });\n    }\n\n  return (\n    <div className=\"EmployerSignUpDetails\">\n            <h1>WorkConnect Account Setup</h1>\n            <h3>We need a few more details to create a great personalised experience for you</h3>\n            <br />\n            <br />\n            <form onSubmit={handleSubmit}>\n                <label htmlFor=\"dob\">Date of Birth:\n                    <input\n                    type=\"date\"\n                    name=\"date_of_birth\"\n                    placeholder='Date of Birth'\n                    id=\"dob\"\n                    value={date_of_birth}\n                    onChange={(e) => setDOB(e.target.value)} />\n                </label>\n                <br />\n                <label htmlFor=\"phone\">Phone number: \n                    <input\n                    type=\"tel\"\n                    name=\"phone_number\"\n                    placeholder='Phone number'\n                    id=\"phone\"\n                    value={phone_number}\n                    onChange={(e) => setPhoneNumber(e.target.value)} />\n                </label>\n                <br />\n                <label htmlFor=\"company\">Company name: \n                    <input\n                    type=\"text\"\n                    name=\"company\"\n                    placeholder='Last name'\n                    id=\"company\"\n                    value={company}\n                    onChange={(e) => setCompany(e.target.value)} />\n                </label>\n                <br />\n                <label htmlFor=\"location\">Location: \n                    <input\n                    type=\"text\"\n                    name=\"location\"\n                    placeholder='Location'\n                    id=\"location\"\n                    value={location}\n                    onChange={(e) => setLocation(e.target.value)} />\n                </label>\n                <br />\n                <label htmlFor=\"state\">State: \n                    <input\n                    type=\"text\"\n                    name=\"state\"\n                    placeholder='State'\n                    id=\"state\"\n                    value={state}\n                    onChange={(e) => setState(e.target.value)} />\n                </label>\n                <br />\n                <label htmlFor=\"country\">Country: \n                    <input\n                    type=\"text\"\n                    name=\"country\"\n                    placeholder='Country'\n                    id=\"country\"\n                    value={country}\n                    onChange={(e) => setCountry(e.target.value)} />\n                </label>\n                <br />\n                <label htmlFor=\"profile_pic\">Profile Picture: \n                    <input\n                    type=\"file\"\n                    name=\"profile_pic\"\n                    id=\"profile_pic\"\n                    value={profile_pic}\n                    onChange={(e) => setProfilePic(e.target.value)} />\n                </label>\n                <br />\n\n                <input type=\"submit\" value=\"Save\" />\n            </form>\n            <br />\n        </div>)\n  }\n\nexport default EmployerSignUpDetails;","/home/abraham/Desktop/WorkConnect/work-connect-frontend/src/utils/employer_handler.js",["95"],[],"\n\nexport async function clickHandlerEmployer() {\n    const user_url = 'http://localhost:8000/api/users/latest/';\n    const employer_url = 'http://localhost:8000/api/register-employer/';\n\n    const user_response = await fetch(user_url);\n    const user_data = await user_response;\n    const user_json = await user_data.json();\n    console.log(user_json);\n\n\n    // const employer_response  = await fetch(employer_url, {\n    //     method: 'POST',\n    //     headers: { 'Content-Type': 'application/json' },\n    //     body: JSON.stringify(user_json)\n    // });\n    // const employer_data = await employer_response;\n\n\n}\n","/home/abraham/Desktop/WorkConnect/work-connect-frontend/src/utils/employee_handler.js",["96"],[],{"ruleId":"97","severity":1,"message":"98","line":13,"column":10,"nodeType":"99","endLine":13,"endColumn":12,"suggestions":"100"},{"ruleId":"101","severity":1,"message":"102","line":1,"column":17,"nodeType":"103","messageId":"104","endLine":1,"endColumn":27},{"ruleId":"101","severity":1,"message":"105","line":2,"column":20,"nodeType":"103","messageId":"104","endLine":2,"endColumn":33},{"ruleId":"101","severity":1,"message":"106","line":4,"column":23,"nodeType":"103","messageId":"104","endLine":4,"endColumn":31},{"ruleId":"101","severity":1,"message":"107","line":12,"column":22,"nodeType":"103","messageId":"104","endLine":12,"endColumn":33},{"ruleId":"101","severity":1,"message":"108","line":13,"column":29,"nodeType":"103","messageId":"104","endLine":13,"endColumn":47},{"ruleId":"101","severity":1,"message":"109","line":32,"column":15,"nodeType":"103","messageId":"104","endLine":32,"endColumn":24},{"ruleId":"101","severity":1,"message":"110","line":2,"column":10,"nodeType":"103","messageId":"104","endLine":2,"endColumn":14},{"ruleId":"101","severity":1,"message":"111","line":5,"column":11,"nodeType":"103","messageId":"104","endLine":5,"endColumn":19},{"ruleId":"101","severity":1,"message":"112","line":12,"column":19,"nodeType":"103","messageId":"104","endLine":12,"endColumn":27},{"ruleId":"101","severity":1,"message":"110","line":2,"column":10,"nodeType":"103","messageId":"104","endLine":2,"endColumn":14},{"ruleId":"101","severity":1,"message":"110","line":2,"column":10,"nodeType":"103","messageId":"104","endLine":2,"endColumn":14},{"ruleId":"101","severity":1,"message":"113","line":5,"column":11,"nodeType":"103","messageId":"104","endLine":5,"endColumn":23},{"ruleId":"114","severity":2,"message":"115","line":3,"column":20,"nodeType":"103","endLine":3,"endColumn":31},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.","ArrayExpression",["116"],"no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","'createContext' is defined but never used.","'Navigate' is defined but never used.","'setPassword' is assigned a value but never used.","'setConfirmpassword' is assigned a value but never used.","'json_data' is assigned a value but never used.","'Link' is defined but never used.","'navigate' is assigned a value but never used.","'setState' is assigned a value but never used.","'employer_url' is assigned a value but never used.","react-hooks/rules-of-hooks","React Hook \"useNavigate\" cannot be called at the top level. React Hooks must be called in a React function component or a custom React Hook function.",{"desc":"117","fix":"118"},"Update the dependencies array to be: [navigate]",{"range":"119","text":"120"},[355,357],"[navigate]"]